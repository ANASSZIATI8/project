<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tableau de bord Ã©tudiant - ExamApp</title>
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --accent-color: #f72585;
            --success-color: #4cc9f0;
            --warning-color: #f7b801;
            --danger-color: #e63946;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --gray-color: #6c757d;
            --border-radius: 8px;
            --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        /* Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f5f7fb;
            color: var(--dark-color);
            line-height: 1.6;
        }

        /* Dashboard container */
        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar styles */
        .sidebar {
            width: 280px;
            background: #fff;
            box-shadow: var(--box-shadow);
            display: flex;
            flex-direction: column;
            position: fixed;
            height: 100vh;
            z-index: 100;
            transition: var(--transition);
        }

        .sidebar-header {
            padding: 1.5rem;
            border-bottom: 1px solid #eee;
        }

        .sidebar-header h2 {
            color: var(--primary-color);
            font-weight: 700;
            margin: 0;
        }

        .user-info {
            display: flex;
            align-items: center;
            padding: 1.5rem;
            border-bottom: 1px solid #eee;
        }

        .user-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: var(--primary-color);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 500;
            margin-right: 15px;
        }

        .user-details {
            flex: 1;
        }

        #user-name {
            font-weight: 600;
            margin-bottom: 0.2rem;
        }

        .user-role {
            font-size: 0.8rem;
            color: var(--gray-color);
            background: #e9ecef;
            padding: 0.2rem 0.5rem;
            border-radius: 20px;
        }

        /* Sidebar Navigation */
        .sidebar-nav {
            flex: 1;
            padding: 1.5rem 0;
            overflow-y: auto;
        }

        .sidebar-nav ul {
            list-style: none;
        }

        .sidebar-nav li {
            margin-bottom: 0.5rem;
        }

        .sidebar-nav a {
            display: flex;
            align-items: center;
            padding: 0.8rem 1.5rem;
            color: var(--dark-color);
            text-decoration: none;
            transition: var(--transition);
            border-left: 4px solid transparent;
        }

        .sidebar-nav a:hover, .sidebar-nav li.active a {
            background-color: #f8f9fa;
            color: var(--primary-color);
            border-left-color: var(--primary-color);
        }

        .sidebar-nav .icon {
            margin-right: 10px;
            font-size: 1.2rem;
        }

        .sidebar-footer {
            padding: 1.5rem;
            border-top: 1px solid #eee;
        }

        #logout-btn {
            display: flex;
            align-items: center;
            width: 100%;
            padding: 0.8rem;
            background: none;
            border: 1px solid #eee;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            color: var(--danger-color);
            text-decoration: none;
        }

        #logout-btn:hover {
            background-color: #fff5f5;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 280px;
            padding: 2rem;
            transition: var(--transition);
        }

        .content-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .content-header h1 {
            font-size: 1.8rem;
            font-weight: 600;
            margin: 0;
            color: var(--dark-color);
        }

        /* Alerts */
        .alert {
            padding: 1rem;
            border-radius: var(--border-radius);
            margin-bottom: 1.5rem;
        }

        .alert-success {
            background-color: #d1f7c4;
            color: #2b9348;
            border-left: 4px solid #2b9348;
        }

        .alert-error {
            background-color: #ffe3e3;
            color: #c1121f;
            border-left: 4px solid #c1121f;
        }

        /* Welcome Card */
        .welcome-card {
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            color: white;
            border-radius: var(--border-radius);
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: var(--box-shadow);
        }

        .welcome-card h2 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }

        .welcome-card p {
            font-size: 1rem;
            opacity: 0.9;
        }

        /* Action Buttons */
        .actions-container {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .action-card {
            flex: 1;
            background-color: #fff;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 1.5rem;
            text-align: center;
            transition: var(--transition);
        }

        .action-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

        .action-icon {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            color: var(--primary-color);
        }

        .action-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .action-desc {
            font-size: 0.9rem;
            color: var(--gray-color);
            margin-bottom: 1.5rem;
        }

        /* Exam History */
        .section-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            color: var(--dark-color);
            padding-bottom: 0.5rem;
            border-bottom: 1px solid #eee;
        }

        .exams-history {
            background-color: #fff;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            overflow: hidden;
        }

        .exams-table {
            width: 100%;
            border-collapse: collapse;
        }

        .exams-table th, .exams-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        .exams-table th {
            background-color: #f8f9fa;
            font-weight: 600;
        }

        .exams-table tr:last-child td {
            border-bottom: none;
        }

        .exams-table tr:hover {
            background-color: #f8f9fa;
        }

        .status-badge {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .status-badge.completed {
            background-color: #e8f5e9;
            color: #2b9348;
        }

        .status-badge.in-progress {
            background-color: #fff3e0;
            color: #e65100;
        }

        .status-badge.timed-out {
            background-color: #ffebee;
            color: #b71c1c;
        }

        .status-badge.expired {
            background-color: #f5f5f5;
            color: #757575;
        }

        .score-badge {
            font-weight: 600;
        }

        .score-badge.pass {
            color: #2b9348;
        }

        .score-badge.fail {
            color: #c1121f;
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
        }

        .empty-state-icon {
            font-size: 3rem;
            color: #dee2e6;
            margin-bottom: 1rem;
        }

        .empty-state-message {
            color: var(--gray-color);
            margin-bottom: 1.5rem;
        }

        /* Buttons */
        .btn {
            display: inline-block;
            padding: 0.6rem 1.2rem;
            border-radius: var(--border-radius);
            border: none;
            cursor: pointer;
            transition: var(--transition);
            font-size: 0.9rem;
            font-weight: 500;
            text-align: center;
            text-decoration: none;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background-color: var(--secondary-color);
        }

        .btn-secondary {
            background-color: #e9ecef;
            color: var(--dark-color);
        }

        .btn-secondary:hover {
            background-color: #dee2e6;
        }

        .btn-success {
            background-color: var(--success-color);
            color: white;
        }

        .btn-success:hover {
            background-color: #3db4db;
        }

        /* Media queries */
        @media (max-width: 992px) {
            .sidebar {
                width: 240px;
            }
            .main-content {
                margin-left: 240px;
            }
            .actions-container {
                flex-direction: column;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 0;
                opacity: 0;
                transform: translateX(-100%);
            }
            .main-content {
                margin-left: 0;
            }
            .sidebar.active {
                width: 240px;
                opacity: 1;
                transform: translateX(0);
            }
            .content-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            .exams-table {
                display: block;
                overflow-x: auto;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Barre latÃ©rale -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <h2>ExamApp</h2>
            </div>
            
            <div class="user-info">
                <div class="user-avatar">
                    <% if (user && user.firstname && user.lastname) { %>
                        <span id="user-initials"><%= user.firstname.charAt(0) %><%= user.lastname.charAt(0) %></span>
                    <% } else if (user && user.prenom && user.nom) { %>
                        <span id="user-initials"><%= user.prenom.charAt(0) %><%= user.nom.charAt(0) %></span>
                    <% } else { %>
                        <span id="user-initials">--</span>
                    <% } %>
                </div>
                <div class="user-details">
                    <% if (user && user.firstname && user.lastname) { %>
                        <p id="user-name"><%= user.firstname %> <%= user.lastname %></p>
                    <% } else if (user && user.prenom && user.nom) { %>
                        <p id="user-name"><%= user.prenom %> <%= user.nom %></p>
                    <% } else { %>
                        <p id="user-name">Ãtudiant</p>
                    <% } %>
                    <span class="user-role">Ãtudiant</span>
                </div>
            </div>
            
            <nav class="sidebar-nav">
                <ul>
                    <li class="active">
                        <a href="/student-dashboard">
                            <span class="icon">ð</span>
                            <span class="text">Tableau de bord</span>
                        </a>
                    </li>
                    <li>
                        <a href="/student-exam-access">
                            <span class="icon">ð</span>
                            <span class="text">AccÃ©der Ã  un examen</span>
                        </a>
                    </li>
                   
                </ul>
            </nav>
            
            <div class="sidebar-footer">
                <a href="/logout" id="logout-btn">
                    <span class="icon">ðª</span>
                    <span class="text">DÃ©connexion</span>
                </a>
            </div>
        </aside>
        
        <!-- Contenu principal -->
        <main class="main-content">
            <header class="content-header">
                <h1>Tableau de bord Ã©tudiant</h1>
            </header>
            
            <!-- Afficher les messages flash -->
            <% if (locals.success_msg && success_msg.length > 0) { %>
                <div class="alert alert-success">
                    <% success_msg.forEach(function(msg) { %>
                        <p><%= msg %></p>
                    <% }); %>
                </div>
            <% } %>
            
            <% if (locals.error_msg && error_msg.length > 0) { %>
                <div class="alert alert-error">
                    <% error_msg.forEach(function(msg) { %>
                        <p><%= msg %></p>
                    <% }); %>
                </div>
            <% } %>
            
            <!-- Carte de bienvenue -->
            <div class="welcome-card">
                <% if (user && (user.firstname || user.prenom)) { %>
                    <h2>Bienvenue, <%= user.firstname || user.prenom %>!</h2>
                <% } else { %>
                    <h2>Bienvenue sur ExamApp!</h2>
                <% } %>
                <p>AccÃ©dez Ã  vos examens et consultez vos rÃ©sultats depuis votre tableau de bord.</p>
            </div>
            
            <!-- Boutons d'action -->
            <div class="actions-container">
                <div class="action-card">
                    <div class="action-icon">ð</div>
                    <h3 class="action-title">Passer un examen</h3>
                    <p class="action-desc">Entrez votre code d'accÃ¨s pour commencer un examen.</p>
                    <a href="/student-exam-access" class="btn btn-primary">AccÃ©der Ã  un examen</a>
                </div>
                
                <div class="action-card">
                    <div class="action-icon">ð</div>
                    <h3 class="action-title">Mes rÃ©sultats</h3>
                    <p class="action-desc">Consultez les rÃ©sultats de vos examens passÃ©s.</p>
                    <a href="#exam-history" class="btn btn-secondary">Voir mes rÃ©sultats</a>
                </div>
            </div>
            
            <!-- Historique des examens -->
            <h2 id="exam-history" class="section-title">Historique des examens</h2>
            
            <div class="exams-history">
                <% if (locals.submissions && submissions.length > 0) { %>
                    <table class="exams-table">
                        <thead>
                            <tr>
                                <th>Examen</th>
                                <th>Date</th>
                                <th>Statut</th>
                                <th>Score</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% submissions.forEach(function(submission) { %>
                                <tr>
                                    <td><%= submission.exam.title %></td>
                                    <td><%= new Date(submission.startTime).toLocaleDateString('fr-FR') %></td>
                                    <td>
                                        <% if (submission.examPassed || submission.hasTaken || submission.status === 'completed') { %>
                                            <span class="status-badge completed">TerminÃ©</span>
                                        <% } else if (submission.status === 'in-progress') { %>
                                            <span class="status-badge in-progress">En cours</span>
                                        <% } else if (submission.status === 'timed-out') { %>
                                            <span class="status-badge timed-out">ExpirÃ©</span>
                                        <% } else { %>
                                            <span class="status-badge expired">ExpirÃ©</span>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (submission.examPassed || submission.hasTaken || submission.status === 'completed') { %>
                                            <span class="score-badge <%= (submission.percentageScore >= 60) ? 'pass' : 'fail' %>">
                                                <%= submission.displayScore || Math.round(submission.percentageScore) %>/100
                                            </span>
                                        <% } else { %>
                                            -
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (submission.examPassed || submission.hasTaken || submission.status === 'completed') { %>
                                            <a href="/student-exam-results/<%= submission._id %>" class="btn btn-secondary">RÃ©sultats</a>
                                        <% } else if (submission.status === 'in-progress') { %>
                                            <a href="/student-take-exam/<%= submission._id %>" class="btn btn-primary">Continuer</a>
                                        <% } else { %>
                                            -
                                        <% } %>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                <% } else { %>
                    <div class="empty-state">
                        <div class="empty-state-icon">ð</div>
                        <p class="empty-state-message">Vous n'avez pas encore passÃ© d'examen.</p>
                        <a href="/student-exam-access" class="btn btn-primary">Passer un examen</a>
                    </div>
                <% } %>
            </div>
        </main>
    </div>
    
    <script>
        // Action pour terminer l'examen
const finishBtn = document.getElementById('finish-btn');
if (finishBtn) {
    finishBtn.addEventListener('click', function() {
        console.log('Bouton "Terminer l\'examen" cliquÃ©');
        if (confirm('Ãtes-vous sÃ»r de vouloir terminer l\'examen ? Vous ne pourrez pas modifier vos rÃ©ponses par la suite.')) {
            saveAnswer(true); // Passer true pour indiquer que c'est la fin
        }
    });
}

// Fonction pour sauvegarder la rÃ©ponse
function saveAnswer(isFinish) {
    if (!document.getElementById('question-form')) {
        console.error('Formulaire non trouvÃ©');
        return;
    }
    
    const form = document.getElementById('question-form');
    const submissionId = form.getAttribute('data-submission-id');
    const questionId = form.getAttribute('data-question-id');
    
    console.log('Sauvegarde de la rÃ©ponse pour la question:', questionId, 'de la soumission:', submissionId);
    
    // Afficher un indicateur de chargement
    const button = isFinish ? document.getElementById('finish-btn') : document.getElementById('next-btn');
    const originalText = button.textContent;
    button.textContent = 'Chargement...';
    button.disabled = true;
    
    // ArrÃªter le minuteur de la question
    clearInterval(questionTimer);
    
    // RÃ©cupÃ©rer les options sÃ©lectionnÃ©es ou la rÃ©ponse textuelle
    let selectedOptions = [];
    const optionInputs = form.querySelectorAll('input[name="selectedOptions"]:checked');
    if (optionInputs.length > 0) {
        optionInputs.forEach(input => {
            selectedOptions.push(input.value);
        });
    }
    
    const textAnswer = form.querySelector('textarea[name="textAnswer"]')?.value || '';
    
    // CrÃ©er les donnÃ©es Ã  envoyer
    const data = {
        selectedOptions: selectedOptions.length > 0 ? selectedOptions : [],
        textAnswer: textAnswer,
        timeTaken: document.getElementById('time-taken')?.value || 0
    };
    
    console.log('DonnÃ©es de rÃ©ponse:', data);
    
    // Construire l'URL avec le paramÃ¨tre finish si nÃ©cessaire
    let url = `/student-save-answer/${submissionId}/${questionId}`;
    if (isFinish) {
        url += '?finish=true';
    }
    
    // Envoyer la rÃ©ponse
    fetch(url, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`Erreur rÃ©seau: ${response.status} ${response.statusText}`);
        }
        return response.json();
    })
    .then(responseData => {
        console.log('RÃ©ponse du serveur (save-answer):', responseData);
        
        if (responseData.success) {
            if (isFinish) {
                // Terminer l'examen
                console.log('Fin de l\'examen, redirection...');
                window.location.href = `/student-finish-exam/${submissionId}`;
            } else {
                // Passer Ã  la question suivante
                console.log('Passage Ã  la question suivante...');
                return fetch(`/student-next-question/${submissionId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({})
                });
            }
        } else {
            throw new Error('Erreur lors de la sauvegarde: ' + (responseData.error || 'Erreur inconnue'));
        }
    })
    .then(response => {
        if (!response) return; // Si c'Ã©tait la fin de l'examen, response est undefined
        if (!response.ok) {
            throw new Error(`Erreur rÃ©seau: ${response.status} ${response.statusText}`);
        }
        return response.json();
    })
    .then(responseData => {
        if (responseData && responseData.success) {
            console.log('RÃ©ponse du serveur (next-question):', responseData);
            // Forcer le rafraÃ®chissement de la page pour afficher la nouvelle question
            window.location.href = `/student-take-exam/${submissionId}`;
        }
    })
    .catch(error => {
        console.error('Erreur:', error);
        alert('Une erreur est survenue: ' + error.message);
        // Restaurer l'Ã©tat du bouton
        button.textContent = originalText;
        button.disabled = false;
    });
}
        // Menu mobile
        document.addEventListener('DOMContentLoaded', function() {
            const menuBtn = document.querySelector('.mobile-menu-btn');
            const sidebar = document.querySelector('.sidebar');
            
            if (menuBtn) {
                menuBtn.addEventListener('click', function() {
                    sidebar.classList.toggle('active');
                });
            }
            
            // Fermer le menu en cliquant Ã  l'extÃ©rieur
            document.addEventListener('click', function(event) {
                const isClickInside = sidebar.contains(event.target) || 
                                     (menuBtn && menuBtn.contains(event.target));
                
                if (!isClickInside && sidebar.classList.contains('active')) {
                    sidebar.classList.remove('active');
                }
            });
        });
    </script>
</body>
</html>